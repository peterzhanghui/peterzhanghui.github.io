name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Cache node modules
      uses: actions/cache@v3
      id: cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install Dependencies
      run: |
        # 安装特定版本的 npm，避免兼容性问题
        npm install -g npm@10.2.4
        
        # 清理之前的 node_modules 和 npm 缓存
        rm -rf node_modules
        npm cache clean --force
        
        # 使用 npm install 而不是 npm ci
        npm install --no-fund --no-audit --prefer-offline --no-progress
        
        # 安装 hexo-cli
        npm install hexo-cli --no-save
        
    - name: Setup Git
      run: |
        git config --global user.name "peterzhanghui"
        git config --global user.email "1226559563@qq.com"
        
    - name: Setup Deploy Key
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        
    - name: Deploy
      run: |
        # 使用本地安装的 hexo-cli
        npx hexo clean
        npx hexo generate
        npx hexo deploy
      env:
        NODE_OPTIONS: --max_old_space_size=4096

    - name: Cleanup
      if: always()
      run: |
        rm -f ~/.ssh/id_rsa

    - name: Notify deployment result
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue?.number;
          if (issue_number) {
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `🚀 部署${context.job.status === 'success' ? '成功' : '失败'}!`
            });
          }