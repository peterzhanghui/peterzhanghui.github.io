name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'  # 降级到更稳定的版本
        registry-url: 'https://registry.npmjs.org/'
        
    - name: Fix npm registry issues
      run: |
        # 彻底禁用淘宝镜像
        npm config set registry https://registry.npmjs.org/ --location=global
        npm config delete registry.taobao.org
        npm config delete registry.npm.taobao.org
        # 禁用 npm 的 https 严格模式，避免证书问题
        npm config set strict-ssl false --location=global
        # 显示当前配置
        npm config list
    
    - name: Install Dependencies
      run: |
        # 直接使用 npm ci 安装依赖
        npm ci --no-fund --no-audit --no-progress --ignore-scripts
        
        # 单独安装 hexo-cli
        npm install hexo-cli@4.3.1 --no-save --ignore-scripts
        npm install hexo-deployer-git@4.0.0 --save --ignore-scripts
        
    - name: Setup Git
      run: |
        git config --global user.name "peterzhanghui"
        git config --global user.email "1226559563@qq.com"
        
    - name: Setup Deploy Key
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        
    - name: Deploy
      run: |
        # 检查 hexo 是否正确安装
        ./node_modules/.bin/hexo version
        
        # 使用本地路径执行 hexo 命令
        ./node_modules/.bin/hexo clean
        ./node_modules/.bin/hexo generate
        
        # 部署前检查 _config.yml 中的部署配置
        cat _config.yml | grep -A 5 "deploy:"
        
        # 部署
        ./node_modules/.bin/hexo deploy
      env:
        NODE_OPTIONS: --max_old_space_size=4096
        npm_config_registry: https://registry.npmjs.org/
        # 禁用 npm 的 SSL 严格检查
        NODE_TLS_REJECT_UNAUTHORIZED: '0'

    - name: Cleanup
      if: always()
      run: |
        rm -f ~/.ssh/id_rsa

    - name: Notify deployment result
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue?.number;
          if (issue_number) {
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `🚀 部署${context.job.status === 'success' ? '成功' : '失败'}!`
            });
          }